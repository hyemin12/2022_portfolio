export const data = {
  studies: [
    {
      filter: "Nodejs",
      id: "nodejs-mongodb",
      title: "nodeJS + mongoDB +react - 회원가입,로그인 기능",
      git: "https://github.com/hyemin12/nodejs_mongodb",
    },
    {
      filter: "Nodejs",
      id: "nodejs-mysql",
      title: "nodeJS + mysql +react - 투두앱 만들기",
      git: "https://github.com/hyemin12/typescript-todo-nodejs",
    },
    {
      filter: "ect",
      id: "codingtest",
      title: "코딩테스트공부 정리",
      url: "https://hyemin12.github.io/codingtest_",
    },
    {
      filter: "Typescript",
      id: "tsc-todo",
      title: "투두리스트",
      git: "https://github.com/hyemin12/typescript-todo-app",
      url: "https://hm-tsc-todo-app.netlify.app",
    },
    {
      filter: "React",
      id: "gomintalk",
      title: "리슨 버블 클론 코딩",
      describtion: [
        "리슨 버블을 클론 코딩한 프로젝트입니다. ",
        "/:id 파라미터를 활용하여 상세페이지를 여러개 만드는 것을 학습했습니다. 프로필 화면에 있는 이미지를 클릭하면, 해당 친구의 프로필 이미지를 크게 확인할 수 있으며 채팅방에 들어가서 친구에게 메세지를 보낼 수 있습니다.",
        "router 구성:",
        "1. profile (메인페이지)내 프로필과 친구들 목록을 확인할 수 있음",
        "2. profile detail : 친구들 프로필을 클릭하였을 때 출력되는 화면 (/:id 활용)",
        "3. chat : 채팅방 목록",
        "4. chatting : 채팅방, 친구와 주고받은 메세지를 확인할 수 있음",
        "5. community : 추천 커뮤니티와 사이트를 확인 할 수 있음",
        "6. setting : 어플 설정 페이지",
      ],
      date: "2021-02-17",
      tool: ["react", "react-router-dom", "sass", "netlify"],
      git: "https://github.com/hyemin12/gomin-talk-app",
      url: "https://wizardly-hermann-7fecb3.netlify.app/",
    },
    {
      filter: "Vanilla JS",
      id: "moment",
      title: "크롬 앱",
      describtion: [
        "노마드코더의 바닐라JS 크롬 앱을 클론 코딩한 프로젝트입니다. 크롬앱을 처음 사용하는 이용자는 이름을 입력하면 사용이 가능하며 날씨 정보, 랜덤으로 나오는 명언, 투두리스트가 화면에 출력됩니다.",
        "새로고침을 했을 때, 데이터가 리셋되지 않도록 데이터를 로컬스토리지에 저장하고, 가져오고, 삭제하는 방법에 대해 공부하였습니다.",
      ],
      date: "2022-02-21",
      tool: ["HTML", "CSS", "Javascript", "open weather api", "gh-pages"],
      features: [
        "1. open weather api를 활용한 날씨 정보 확인",
        "2. local storage의 username 값을 확인하여 로그인 / 홈 화면을 나타냄",
        "3. 페이지가 새로고침될 때마다 새로운 명언 & 배경이미지가 나타남",
        "4. 투두 리스트 작성",
      ],
      git: "https://github.com/hyemin12/vanillaJS-chrome-app",
      url: "https://hyemin12.github.io/vanillaJS-chrome-app/",
    },
    {
      filter: "React",
      id: "twitter",
      title: "트위터 클론 코딩",
      describtion: [
        "리액트와 파이어베이스를 이용하여 만든 트위터 클론 프로젝트입니다. 소셜(구글, 깃허브)로 회원가입 로그인이 가능하며, 게시물을 작성할 때 사진 첨부 및 사진 미리보기가 가능합니다. 현재는 배포페이지 router 오류로 인해 배포된 페이지를 확인할 수 없습니다.",
      ],
      date: "2021-04-25",
      tool: ["react", "firebase"],
      features: [
        "1. 회원가입 및 로그인, 로그아웃",
        "2. 새로운 게시물 등록",
        "3. 사진 첨부 및 사진 미리보기 기능",
      ],
      git: "https://github.com/hyemin12/react-firebase-twitter",
      // imgs: [""],
    },

    {
      filter: "Vanilla JS",
      id: "starbucks",
      title: "Starbucks 2017",
      describtion: [
        "스타벅스 홈페이지를 클론 코딩한 프로젝트입니다. ",
        "패스트 캠퍼스 프론트 엔드 강의를 수강하며 제작한 홈페이지이며, 메인페이지와 로그인페이지로 이루어져 있습니다. 카카오톡이나 다른 어플로 공유했을 때, 사이트에 대한 정보를 담을 수 있는 open graph에 대하여 공부하였습니다.",
      ],
      date: "2021-05-22",
      tool: [
        "HTML",
        "CSS",
        "Javascript",
        "open Graph",
        "swiper",
        "lodash",
        "GSAP & ScrollToPlugin",
        "scrollmagic",
        "git-page",
      ],
      git: "https://github.com/hyemin12/vanilla-starbucks-app",
      url: "https://starbucks-responsive-app-ee135b.netlify.app",
    },
    {
      filter: "Vanilla JS",
      id: "paint",
      title: "그림판",
      describtion: [
        "노마드코더의 바닐라JS 그림판을 클론 코딩한 프로젝트입니다. 캔버스에서 그림을 그릴 수 있으고, 이미지를 저장할 수 있습니다. ",
      ],
      date: "2022-02-22",
      tool: ["HTML", "CSS", "Javascript", "Canvas events", "gh-pages"],
      features: [
        "1. 그리기 모드 / 채우기(페인트) 모드 선택 가능 ",
        "2. 브러쉬 크기 및 색상 선택 가능",
        "3. save 버튼을 통해 그린 이미지 저장 가능",
      ],
      git: "https://github.com/hyemin12/vanillaJS-paint-app",
      url: "https://hyemin12.github.io/vanillaJS-paint-app/",
    },

    {
      filter: "Vanilla JS",
      id: "wordle",
      img: "wordle",
      title: "Wordle 게임",
      describtion: [
        "요즘 인기가 많은 단어를 맞추는 게임 wordle을 자바스크립트로만으로 구현한 프로젝트입니다. 게임방법은 단어를 입력하고, Enter 버튼을 눌러 제출하면 됩니다. 제출 시 정답 유무를 확인하고, 오답일 경우 각 타일의 색상이 변경되어 정답 단어에 얼마나 가까웠는지를 보여줍니다.",
        "유투브 코딩애플의 wordle 게임 영상을 보고 클론 코딩으로 시작한 프로젝트입니다. 여러 기능을 추가하고 싶어 코드를 작성했지만 제대로 작동하지 않아 해결방법을 찾던 도중 한 개발자가 블로그에 wordle 게임을 직접 구현한 코드를 공유한 것을 보았고, 이를 제 프로젝트에 적용시켰습니다. wordle 프로젝트를 만들며, 몰랐던 기능들과 해결방법에 대해 알 수 있어서 좋았고, 더 나은 코드를 작성하는 방법에 대해 공부 하는 시간을 가졌습니다.",
      ],
      date: "2022-03-20",
      tool: ["HTML", "CSS", "Javascript", "gh-pages"],
      features: [
        "1. 키보드를 누르면 해당 값이 칸에 입력되고, 제출 시 채점됨 ",
        "2. 밝은 모드 / 어두운 모드로 모드 선택 가능",
      ],
      git: "https://github.com/hyemin12/vanillaJS-wordle-app",
      url: "https://hyemin12.github.io/vanillaJS-wordle-app/",
      detailImg: ["wordle1", "wordle2"],
    },
    {
      filter: "Vanilla JS",
      id: "responsive1",
      img: "responsive1-1",
      title: "반응형 사이트 - readOnly",
      describtion: [
        "html5up 사이트의 readOnly 마크업하였다. 각각 서브 페이지를 별도의 html 파일로 만들지 않고, tab 형태로 제작하였다.",
      ],
      date: "2022-04-12",
      tool: ["HTML", "CSS", "Javascript", "gh-pages"],
      ect: "https://html5up.net/read-only",
      git: "https://github.com/hyemin12/responsive-webstie-readOnly",
      url: "https://hyemin12.github.io/responsive-webstie-readOnly/",
    },
    {
      filter: "Vanilla JS",
      id: "responsive2",
      img: "responsive2-1",
      title: "반응형 사이트 - massively",
      describtion: [
        "html5up 사이트의 massively를 마크업하였다. 각각 서브 페이지를 별도의 html 파일로 만들지 않고, tab 형태로 제작하였다.",
      ],
      date: "2022-04-12",
      tool: ["HTML", "CSS", "Javascript", "gh-pages"],
      ect: "https://html5up.net/massively",
      git: "https://github.com/hyemin12/responsive-webstie-massively",
      url: "https://hyemin12.github.io/responsive-webstie-massively/",
    },
    {
      filter: "Vanilla JS",
      id: "responsive3",
      img: "responsive3-1",
      title: "반응형 사이트 - funny Flakes",
      describtion: ["flake 회사의 메인페이지를 마크업하였다."],
      date: "2022-04-10",
      tool: ["HTML", "CSS", "Javascript", "gh-pages"],
      ect: "https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbimORE%2FbtrE8N156Ne%2FEE9eIvq1Zd9k414O3vNH80%2Fimg.jpg",
      git: "https://github.com/hyemin12/responsive-webstie-funnyFlakes",
      url: "https://hyemin12.github.io/responsive-webstie-funnyFlakes/",
    },
    {
      filter: "Vanilla JS",
      id: "responsive4",
      img: "responsive4-1",
      title: "반응형 사이트 - forty",
      describtion: [
        "forty 회사의 사이트를 마크업하였다. 서브페이지를 각각의 별도의 페이지로 분리해서 만들었고, 각각 페이지별로 css를 작성하였다.",
      ],
      date: "2022-06-29",
      tool: ["HTML", "CSS", "gh-pages"],
      ect: "https://html5up.net/forty",
      git: "https://github.com/hyemin12/responsive-webstie-forty/",
      url: "https://hyemin12.github.io/responsive-webstie-forty/",
    },
    // {
    //   filter: "jQuery",
    //   id: "markuptravel",
    //   title: "여행사 마크업",
    //   describtion: [
    //     "하이미디어 여행사 홈페이지를 마크업한 사이트입니다. 메인페이지, 회사소개 페이지가 마크업되어져 있으며, 나머지 페이지들은 리뉴얼안내 이미지가 화면에 출력됩니다.",
    //     "jQuery의 bx 슬라이드를 이용하여 공항예약, 호텔예약, 렌트카, 휴양지의 탭 메뉴를 슬라이드처럼 움직이도록 구현하였습니다.",
    //     "배경의 풍선에 애니메이션 효과를 주어 보다 생동감있는 홈페이지를 구현하고자 하였습니다.",
    //   ],
    //   date: "2020-08-14",
    //   tool: ["HTML", "CSS", "jQuery", "gh-pages", "Photoshop"],
    //   git: "https://github.com/hyemin12/web-design-practice/tree/main/05travel",
    //   url: "https://hyemin12.github.io/web-design-practice/05travel/",
    // },
    {
      filter: "jQuery",
      id: "stranger",
      title: "비밀의 숲2 프로모션",
      describtion: [
        "비밀의 숲2 방영 기념 프로모션 페이지를 제작하였습니다. jQery 풀페이지 플러그인을 사용하여 제작하였고, 비밀의 숲만의 미스테리한, 어두운 분위기를 디자인에 녹이고자 하였습니다.",
      ],
      date: "2020-08-15",
      tool: ["HTML", "CSS", "jQuery", "gh-pages", "Photoshop"],
      features: [
        "1. 등장인물 소개",
        "2. 관련 사진 및 동영상 확인",
        "3. 시즌 줄거리 확인",
      ],
      git: "https://github.com/hyemin12/web-design-portfolio/01Stranger2/",
      url: "https://hyemin12.github.io/web-design-portfolio/01Stranger2/",
    },
    {
      filter: "ect",
      id: "lottecard",
      title: "롯데카드 프로모션",
      describtion: [
        "가정의 달을 맞아 롯데카드 기프트카드 판매 촉진 및 이벤트 홍보의 프로모션 페이지를 디자인하였다. 아기자기한 일러스트 이미지를 사용하여 사랑스러운 분위기를 표현하였으며, 롯데카드에서 자주 사용하는 핑크-블루 톤과 캐릭터를 사용하여 롯데카드 배너 느낌을 연출하였다.",
      ],
      date: "2020-05-27",
      tool: ["Photoshop"],
      url: "https://github.com/hyemin12/react-dashboard-app2/blob/master/public/img/portfolio/lottecard2.jpg?raw=true",
    },
    {
      filter: "ect",
      id: "travel",
      title: "여행사 프로모션",
      describtion: [
        "여행 SNS 공유 이벤트 참여 촉진 및 홍보의 프로모션 페이지를 디자인하였다. 전체적인 컨셉을 부다페스트로 설정하여 부다페스트 관련 이미지들을 사용하였고,그랜드 부다페스트호텔 포스터에 사용된 핑크-보라계열 색을 사용하여 부다페스트 느낌을 연출하였다.",
      ],
      date: "2020-03-20",
      tool: ["Photoshop"],
      url: "https://github.com/hyemin12/react-dashboard-app2/blob/master/public/img/portfolio/travel2.jpg?raw=true",
    },
  ],
  works: [
    {
      filter: "React",
      id: "movie",
      title: "영화검색사이트",
      describtion: [
        "imdb api를 이용해서 인기 영화, 상영예정 영화, 평점이 높은 영화목록을 가져오고 영화 상세정보를 볼 수 있는 프로젝트입니다.",
        "무료 api를 활용하여 비동기 통신에 대하여 학습하기 위해 제작한 프로젝트입니다. 이 프로젝트를 진행하며 Api를 이용해서 json 파일을 받아온 뒤 화면에 출력하는 방법에 대해 학습했습니다.",
        "",
      ],
      date: "2022-03-08",
      tool: ["REACT", "react-router-dom", "tmdb API", "Sass", "netlify"],
      features: [
        "＊ 인기 영화, 상영중인 영화 등 다양한 데이터를 받아와서 페이지에 출력",
        "____서버에 정보를 요청하고 받아오는 것을 비동기로 처리(async,await)",
        "＊ context API를 사용하여 검색기능 구현하기",
        "____search_context라는 hook 파일을 생성하고, 검색된 결과를 전역으로 관리하기",
        "＊ 특정 id를 가진 영화 정보를 받아와서 상세정보 페이지 구현하기",
      ],
      git: "https://github.com/hyemin12/react-movie-app",
      url: "https://react-movie-app-1f5ff8.netlify.app/",
      bgColor: "#e9edec",
    },
    {
      filter: "Typescript",
      id: "mytravel",
      title: "여행일정앱",
      describtion: [
        "타입스크립트와 firebase로 작성된 포트폴리오 프로젝트입니다. ",
        "firebase에서 데이터를 가져와 화면에 출력되도록 설정하였고, gh-pages를 활용하여 배포하였습니다. 데이터를 가져올 때 orderBy를 사용하여 오름차순으로 정렬하여 일정이 순서대로 출력될 수 있도록 하였습니다.",
        "또한 카카오지도 api를 활용하여 지도를 구현하였습니다. 각각 장소의 위치를 marker를 활용해 표시해 일정에 참고할 수 있도록 하였습니다.",
        "이 프로젝트를 제작하며 리액트에서 카카오지도 api를 가져와서 사용하는 법과 useRef를 사용하는 법에 대해 공부하였습니다. api Key를 숨기기 위해 script 태그에 %를 사용하여 환경변수를 적용하고자 하였으나, .env 파일 안 환경 변수가 제대로 적용되지 않는 오류가 발생했습니다.  공식 문서를 다시 확인해보니 script 태그가 잘못된 위치에 작성 되어있는 것을 확인했고, body 태그 하단에 다시 작성하였더니 오류가 해결되었습니다.",
        "추후에는 비밀번호 재설정 버튼을 눌렀을 때, 회원가입되어 있는 유저를 필터링 하는 기능을 추가하고 지도를 클릭하였을 때 확대/축소하는 버튼이 잘리는 것을 수정 할 것입니다.",
      ],
      date: "2022-08-08",
      tool: ["react", "Typescript", "firebase", "kakao-maps-api", "gh-pages"],
      features: [
        "1. Firebase의 auth를 활용한 회원가입, 로그인, 로그아웃 기능 구현",
        "- 이메일과 비밀번호를 이용해서 회원가입을 할 수 있고, google을 이용해서도 회원가입이 가능",
        "2. Firebase의 database를 활용한 데이터 관리 (상세일정 추가, 수정, 삭제 기능)",
        "3. DB에서 가져온 데이터를 filter해서 날짜 별 여행 일정을 확인할 수 있음",
        "4. 카카오 맵 api를 활용한 지도 구현",
        "- marker를 통한 동선 및 장소 확인",
        "- react 환경 변수를 활용하여 카카오맵 API KEY 숨기기",
      ],
      git: "https://github.com/hyemin12/typescript-hyemin-app",
      url: "https://hyemin12.github.io/typescript-hyemin-app",
      bgColor: "#eae2cf",
    },
    {
      filter: "Typescript",
      id: "tsc-shop",
      title: "쇼핑몰",
      describtion: [
        "타입스크립트로 제작된 프로젝트입니다. 장바구니에 상품을 담고, 삭제할 수 있는 기능을 가지고 있습니다.",
        "createSlice()를 사용하여 리듀서를 생성하였고, 각 리듀서의 state와 action을 관리하였습니다. 장바구니가 비어있을 때, 장바구니 state에 해당 아이템의 존재여부를 확인하고 존재할 경우 갯수가 추가되고 장바구니에 해당 아이템이 존재하지 않으면 장바구니에 추가하도록 설정했습니다. 또한 useSelector를 이용하여 state를 가져왔고, 생성한 action을 useDispatch를 사용하여 발생시켰습니다.",
        "새로운 훅을 이용하여 액션을 생성하는 방법을 배웠고, 조건에 따라 컴포넌트의 내용을 다르게 보여주는 방법에 대해서도 공부했습니다. 장바구니 state를 빈 배열로 설정할 경우 타입오류가 나타나는 것에 대해서는 문제해결을 하지 못하였습니다. 이부분 역시 관련해서  해결방법을 찾아 수정할 예정입니다.",
      ],
      date: "2022-09-01",
      tool: [
        "React",
        "Typescript",
        "redux toolkit",
        "React-router-dom",
        "netlify",
      ],
      features: [
        "1. 반응형 UI 구현",
        "- 화면이 작아질 경우 장바구니 위치와 콘텐츠 개수를 변경함",
        "2. store를 통해 state를 관리 하기 (장바구니에 추가, 삭제, 장바구니 비우기)",
        "- configureStore를 통해 store를 생성하고 createSlice를 통해 reducer를 생성하고 action을 정의",
        "- 아이템 플러스 버튼을 누르면 해당 action을 통해서 장바구니 state를 변경",
        "- 장바구니 버튼들을 누르면 장바구니 state들을 변경",
      ],

      git: "https://github.com/hyemin12/react-shop-practice-app/",
      url: "https://h-m-shop.netlify.app/",
      bgColor: "#d9e4eb",
    },

    {
      filter: "React",
      id: "dashboard",
      title: "대시보드",
      describtion: [
        "다양한 API를 통해 정보를 가져오고, 해야할 일 목록 작성, 음악 플레이 등 다양한 작업을 할 수 있는 대쉬보드 페이지와 개인 포트폴리오를 확인할 수 있는 페이지, 좌측 이름 옆 화살표를 클릭하면 프로필 확인이 가능한 프로젝트입니다.",
        "이번 프로젝트를 하며 react의 다양한 라이브러리들에 대해 알게되었고, redux store 를 활용하여 state를 주고 받는 방법에 대해 학습하게 되었습니다. 다양한 API를 사용하는 방법과 커스텀하는 방법에 대하여 공부하였습니다. 하지만 xml 형식의 데이터를 가져오는데 어려움을 겪었습니다. xml 형태의 데이터를 받아오는 방법을 해결하려 react-xml-parser 등과같은 라이브러리를 사용하였지만 이를 해결할 수 는 없었습니다. 또한 SameSite 쿠키 관련 오류를 해결하려고 하였으나 서버에 대해 지식이 부족하여 해결하지 못하였습니다.",
      ],
      date: "2022-03-20",
      tool: [
        "React",
        "react-router-dom",
        "redux",
        "axios",
        "react-h5-audio-player",
        "@fullcalendar/react",
        "open weather api",
        "Corona-19-API",
        "netlify",
      ],
      features: [
        "1. widget을 통한 정보 확인 (현재시간, d-day, 날씨, 북마크, 코로나 19, 명언)",
        "2. 투두리스트와 캘린더를 통해 스케줄 확인 및 정리 가능",
        "3. 개인 작업물 목록과 상세 내용 확인 가능",
        "4. 좌측 이름 옆 화살표 클릭시 프로필 확인 가능",
      ],
      git: "https://github.com/hyemin12/react-dashboard-app2",
      url: "https://lucid-yonath-d614bb.netlify.app/",
      bgColor: "#f3e7e9",
    },
  ],
  interview: [
    {
      title: "언제부터 지금의 직무에 관심을 갖게 되었나요?",
      text: "웹디자이너 · 웹퍼블리셔 과정을 수료하면서 저는 디자인 보다는 코드를 작성해서 웹을 구현하는 것에 더 큰 매력을 느꼈습니다. 다양한 기능을 구현하고 싶어 자바스크립트에 대하여 공부를 하면서 프론트엔드의 개발에 대해 알게 되었고, 하드코딩이 아닌 백엔드의 데이터로 화면을 구성하고 기능을 동작하도록 만드는 프론트엔드 개발에 관심을 가지게 되었습니다.",
    },
    {
      title: "학원을 다니지 않고, 혼자서 개발 공부를 한 이유가 있나요?",
      text: "저 역시 웹 디자인 및 웹 퍼블리셔 과정은 학원을 다니며 공부를 했습니다. 학원을 다니며, 강의를 열심히 들어도 혼자 복습하거나 꾸준히 연습하지 않으면 제 것으로 만들기 어렵다는 것을 느꼈습니다. 그래서 개발 공부할 때에는 강의를 듣고, 그 강의를 복습하는 방식으로 공부를 했습니다.",
    },
    {
      title:
        "Github commit 기록을 보면 2021년 11월부터 2022년 1월까지 commit이 안되어 있던데 무슨 일이 있었나요?",
      text: "정보처리기능사 자격증을 취득하기 위해 공부를 했습니다. 2021년 프론트엔드 강의를 듣고 개인 프로젝트를 제작하려고 하였으나, 강사의 코드를 그대로 따라 치기식으로 공부한 결과 혼자서 코드를 작성하는데 어려움을 느꼈습니다. 따라 무작정 강의를 듣는 것이 아닌 기초부터 차근차근 공부하고자 하였습니다. 컴퓨터공학의 기초 지식을 쌓을 수 있는 정보처리 기능사를 9월부터 12월까지 공부했으며 자격증 취득하였습니다.",
    },
  ],
};
